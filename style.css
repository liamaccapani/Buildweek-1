@import url('https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap');

:root {
    --grey-text: rgb(160, 160, 160);
    --bg-hover: rgba(128, 128, 128, 0.604);
    --bg-body: rgb(18, 18, 18);
    --bg-nowplay: rgb(24, 24, 24);
    --spotify-green: rgb(29, 185, 84);
}

body {  /* purple line over nowplaying!!!!! */
    font-family: 'Didact Gothic', sans-serif;
    /* background: var(--bg-body); */
    background: linear-gradient(0deg, var(--bg-body) 0%, var(--bg-nowplay) 60%, rgb(201, 184, 180) 100%);
}

/* -------> ALT NAVBAR <--------- */

.alt-navbar .navbar-alt-color {
    background-color: black;
}

.alt-navbar ul li {
    list-style: none;
    font-size: 1rem;
}

.alt-navbar ul li:hover {
    background-color: var(--bg-hover);  
}

.alt-navbar ul li a:hover {
    color: white;
}

/* -------> SIDEBAR <--------- */

.sidebar {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    /* align-content: flex-start; */
    height: 90vh;
    contain: content;
    font-size: 0.9rem;
    background-color: black;
    padding-left: 1rem;
}

.sidebar .spotify-logo {
    object-fit: cover;
    /* align-self: center; */
}

.sidebar ul li {
    list-style: none;
    font-size: 0.8rem;
}

.sidebar ul li:hover {
    background-color: var(--bg-hover);  
}

.sidebar .icons-menu i {
    font-size: 1.2rem;
    padding-right: 0.5rem;
}

.sidebar .icons-menu li,
.sidebar .playlist-menu li {
    font-weight: bolder;
}

.sidebar ul li a {
    color: var(--grey-text);
    text-decoration: none;
}

.sidebar ul li a:hover {
    color: white;
}


.sidebar div.playlist-menu { /* touching the borders of the div */
    border-bottom: 1px solid var(--grey-text);
}

.sidebar div.genres-menu ul {
    overflow-y: scroll;
    max-height: 400px;
    height: 100%;
}

 .sidebar div.genres-menu ul li { /* why without a works - color ellipsis dots*/
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    color: var(--grey-text);
    width: 200px;
 }

.sidebar .install-app {
    /* position: absolute; */
    background-color: black;
    color: var(--grey-text);
    font-weight: bolder;
    height: 1.5rem;
    /* align-self: center; */
    /* display: flex; */
    /* justify-content: center;
    bottom: 0;
    left: 0;
    right: 0; */
    /* z-index: 9; */
}

.sidebar .install-app:hover {
    background-color: var(--bg-hover);
    color: white;
}

@media (max-width: 999px) {
    .sidebar, 
    .container--main .nav-avatar {
      display: none;
    }

    .alt-navbar {
        display: block;
    }

}

@media (min-width: 1000px) {
    .sidebar,
    .nav-avatar {
        display: block;
    }

    .alt-navbar {
        display: none;
    }
}

/* -------> NAV-AVATAR <--------- */ /* color and border radius of avatar dd menu, dd menu not working */

div.nav-avatar {
    display: flex;
    justify-content: space-between;
}

div.avatar div.dropdown img.avatar-img {
    max-width: 25px;
    border-radius: 50%;
}

div.avatar div.dropdown .round-btn {
    border-radius: 50px;
    height: 38px;
}

/* -------> ALBUM INFO ROW <--------- */

.album-cover img {
    object-fit: cover;
    width: 10rem; 
    box-shadow: 0px 0px 20px -1px black;
}

.album-infos-wrapper img {
    object-fit: cover;
    width: 1.2rem;
    border-radius: 50%;
}

.album-overview {
    color: white;
}



.black-layer {
    position: relative;
}

.black-layer::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(34, 33, 33, 0.364);
}

.title-th {
    color: var(--grey-text);
    border-bottom: 1px solid var(--grey-text);
}

.title-th span.title {
    font-size: .8rem;
    font-weight: bold;
}


.tracklist {
    color: var(--grey-text);
}

.track--container {
    width: 100%;
}

.track--container .track-num-title {
    width: 90%;
    
}

.track--container .track-num-title h6.track-title {
    font-size: 1rem;
    font-weight: bold;
}

.track--container .track-num-title p.track-artist {
    font-size: .8rem;
}










/* -------> ICONS CONTAINER <--------- */
.icons--container .green-play--btn {
    width: 2rem;
    height: 2rem;
    background-color: var(--spotify-green); /* change with spotify green */
    border-radius: 50%;
    position: relative;
}

.icons--container .green-play--btn::after {
    content: '';
    width: 0;
    height: 0;
    border-width: 6px 0 6px 10px;
    border-style: solid;
    border-color: transparent transparent transparent white;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 3px;
    margin: auto;
}

.icons--container .icons-wrapper {
    color: var(--grey-text);
}

/* -------> NOW PLAYING <--------- */ /* general layout, progress bar width, flex not working properly */

/* general layout */
 div.container--nowplay {
    width: 100vw;
    position: fixed;
    bottom: 0;
    color: var(--grey-text);
    background-color: var(--bg-nowplay);
}


 .album-img img {
    object-fit: cover;
    width: 50px;
    height: 50px;
}


 .container--nowplay .song-info h6 {
     /*display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;  
    overflow: hidden;          no need for width */
    font-size: 0.9rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 250px;  /* doesn't work without WIDTH */
}

.container--nowplay .song-info p {
    font-size: 0.7rem;
}


div.play-btn {
    background-color: white;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    position: relative;
    top: 8px;
}

div.play-btn:after {
    content: '';
    width: 0; /* make the container collapse */
    height: 0;
    border-style: solid;
    border-width: 6px 0 6px 10px; 
    border-color: transparent transparent transparent black; 
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 3px;
    margin: auto;
}

/* width??*/
 .container--nowplay .progress {
    background-color: var(--grey-text);
    height: 2px;
}

.volume-icons .volume-bar {
    background-color: var(--grey-text);
    height: 2px;
}


/* Triangle trick:
* = border-top 6 border-right 0 border-bottom 6 border-left 10
* border top and bottom --> makes it higher/shorter
* no need for border-right because it' pointing in that direction, and messes up with total width
* (if left pointing arrow--> no need for border-left)
* border-left = width of the arrow */